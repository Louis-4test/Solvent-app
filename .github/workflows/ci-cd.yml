name: CI/CD Pipeline for Fintech App (Node.js + Docker + Kubernetes)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run npm audit
        run: npm audit

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: [test, lint, security-scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        env:
          IMAGE_NAME: fola901/solvent-app
        run: |
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:${{ github.sha }} .
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ github.sha }}

  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Allow runner user to use Docker
        run: |
          sudo usermod -aG docker $USER
          newgrp docker

      - name: Start Minikube
        run: |
          minikube start --driver=docker --force
          minikube update-context
          minikube status  
      - name: Setup kubeconfig for Minikube
        run: |
          mkdir -p $HOME/.kube
          minikube update-context
          cp -r $HOME/.minikube $HOME/.kube/
          export KUBECONFIG=$HOME/.kube/config
          kubectl config use-context minikube

      - name: Verify kubectl connection
        run: |
          kubectl cluster-info

      - name: Deploy to Kubernetes
        env:
          IMAGE_NAME: fintech-app
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl set image deployment/fintech-app fintech-app=$IMAGE_NAME:${{ github.sha }}
          kubectl rollout status deployment/fintech-app
          
      - name: Get pods status
        run: |
          kubectl get pods  

      - name: Describe the deployment and pods
        run: |
          kubectl describe deployment fintech-app  
          kubectl describe pod $(kubectl get pods -o=jsonpath='{.items[0].metadata.name}')  

      - name: Get logs for the fintech-app container
        run: |
          kubectl logs $(kubectl get pods -o=jsonpath='{.items[0].metadata.name}') -c fintech-app  
      - name: Check Minikube resources
        run: |
          minikube ssh "free -h"  
