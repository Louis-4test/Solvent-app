name: CI/CD Pipeline for Fintech App (Node.js + Docker + Kubernetes)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run npm audit
        run: npm audit

      

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: [test, lint, security-scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub (or other container registry)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker image
        run: npm run docker:build

      - name: Push Docker image
        run: npm run docker:push

  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Decode kubeconfig and configure Kubernetes context
        run: |
          # Decode the base64-encoded kubeconfig file
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > kubeconfig.yaml

          # Set the KUBECONFIG environment variable to point to the decoded file
          export KUBECONFIG=kubeconfig.yaml

          # Verify the Kubernetes context
          kubectl config current-context

      - name: Deploy to Kubernetes
        run: |
          # Apply Kubernetes manifests
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml